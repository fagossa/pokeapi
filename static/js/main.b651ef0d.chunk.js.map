{"version":3,"sources":["components/PokemonSearch.js","components/PokemonDetail.js","actionTypes/index.js","reducers/pokemonList.js","reducers/index.js","stores/index.js","components/PokemonApp.js","actions/index.js","index.js"],"names":["PokemonSearch","onSearch","useState","name","setName","Form","className","onSubmit","e","preventDefault","Control","type","value","onChange","target","placeholder","Button","variant","onClick","PokemonSkills","skills","Card","style","width","Body","Title","ListGroup","horizontal","map","skill","Item","is_hidden","ability","PokemonMoves","moves","obj","move","PokemonSprites","sprites","imgs","back_default","back_shiny","front_default","back_female","back_shiny_female","front_female","filter","element","count","setCount","useEffect","timeout","setTimeout","length","clearTimeout","Img","src","height","PokemonDetail","pokemon","abilities","POKEMON_ADDED","pokemonReducer","state","action","pokemons","Actions","console","log","currPokemon","payload","p","allReducers","combineReducers","pokemonStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","PokemonApp","useSelector","searchPokemon","a","fetch","res","json","data","dispatch","fluid","href","id","role","Container","Row","Col","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.b651ef0d.chunk.js","sourcesContent":["import { React, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst PokemonSearch = ({ onSearch }) => {\n    const [name, setName] = useState('')\n\n    return (\n        <Form className=\"d-flex\" onSubmit={(e) => {\n            e.preventDefault();\n            onSearch(name)\n        }}>\n            <Form.Control \n                    type=\"search\"\n                    aria-label=\"Search\"\n                    className=\"mr-2\"\n                    value={name} \n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Pokemon name\" />\n            <Button variant=\"primary\" onClick={() => onSearch(name)}>\n                    Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default PokemonSearch;","import React, { useState, useEffect } from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\n\nconst PokemonSkills = ({ skills }) => {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Body>\n                <Card.Title>Skills</Card.Title>\n                <ListGroup horizontal=\"sm\">\n                    {skills.map(skill =>\n                        <ListGroup.Item \n                            key={skill.ability.name} \n                            variant={skill.is_hidden ? 'warning' : '' }\n                            >\n                        {skill.ability.name}\n                    </ListGroup.Item>\n                )}\n            </ListGroup>        \n            </Card.Body>\n        </Card>\n    )\n}\n\nconst PokemonMoves = ({moves}) => {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Body>\n                <Card.Title>Moves</Card.Title>\n                <ListGroup >\n                    {moves.map(obj =>\n                        <ListGroup.Item \n                            key={obj.move.name}>\n                            {obj.move.name}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>        \n            </Card.Body>\n        </Card>\n    )\n}\n\nconst PokemonSprites = ({sprites}) => {\n    const imgs = [\n        sprites.back_default, sprites.back_shiny, sprites.front_default, \n        sprites.back_female, sprites.back_shiny_female, sprites.front_female\n    ].filter((element) => !!element);\n\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            if (count >= imgs.length - 1) {\n                setCount(0);\n            } else {\n                setCount(count + 1);\n            }\n         }, 1000);\n     \n        return () => clearTimeout(timeout);\n       }, [count, imgs.length]);\n\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Body>\n                <Card.Title>Sprites</Card.Title>\n                { imgs[count] &&\n                    <Card.Img src={imgs[count]} \n                        width=\"300\" \n                        height=\"300\">\n                    </Card.Img>\n                }\n            </Card.Body>\n        </Card>\n    )\n}\n\nconst PokemonDetail = ({ pokemon }) => {\n    return (\n        <span>\n            <PokemonSprites sprites={pokemon.sprites} />\n            <PokemonSkills skills={pokemon.abilities || []} />\n            <PokemonMoves moves={pokemon.moves || []} />\n        </span>\n    )\n}\n\nexport default PokemonDetail;","export const POKEMON_ADDED = \"pokemonAdded\";\nexport const POKEMON_REMOVED = \"pokemonRemoved\";\n","\nimport * as Actions from '../actionTypes'\n\nconst pokemonReducer = (state, action) => {\n    if (!state) {\n        return {\n            pokemons: []\n        }\n    }\n    switch (action.type) {\n        case Actions.POKEMON_ADDED:\n            console.log('pokemon added', action.type)\n            return {\n                ...state,\n                currPokemon: action.payload,\n                pokemons: [\n                    ...state.pokemons,\n                    action.payload,\n                ]\n            };\n        case Actions.POKEMON_REMOVED:\n            console.log('pokemon removed', action.type)\n            return {\n                ...state,\n                pokemons: state.pokemons.filter(p => p.name !== action.payload.name)\n            };\n        default:\n            return state;\n    }\n}\n\nexport default pokemonReducer;\n","import { combineReducers } from 'redux';\nimport pokemonReducer from './pokemonList';\n\nconst allReducers = combineReducers({\n    pokemon: pokemonReducer\n})\n\nexport default allReducers;\n","import { createStore } from 'redux';\nimport allReducers from '../reducers';\n\nconst pokemonStore = createStore(\n    allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default pokemonStore;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport PokemonSearch from './PokemonSearch';\nimport PokemonDetail from './PokemonDetail';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport './PokemonApp.css';\n\nimport { addPokemon } from '../actions'\nimport pokemonStore from '../stores'\n\nconst PokemonApp = () => {\n\n    const pokemons = useSelector(state => state.pokemon.pokemons)\n\n    const searchPokemon = async (name) => {\n        try {\n            const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\n            const data = await res.json()\n            pokemonStore.dispatch(addPokemon(data));\n        } catch (error) {\n            // TODO: show error\n            //pokemonStore.dispatch(...);\n        }\n    }\n\n    useEffect(() => {\n        // To preload a pokemon\n        //searchPokemon('bulbasaur');\n    }, []);\n\n    return (\n        <span>\n            <header fluid=\"md\">\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <a className=\"navbar-brand\" href=\"https://fagossa.github.io/pokeapi/\">PokeAPI</a>\n                    <button className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#navbarCollapse\"\n                        aria-controls=\"navbarCollapse\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                        <PokemonSearch onSearch={searchPokemon} />\n                    </div>\n                </nav>\n            </header>\n            <main role=\"main\" className=\"flex-shrink-0\">\n                <Container>\n                    <Row>\n                        { (pokemons || []).map(p => <Col><PokemonDetail pokemon={p}/></Col>) }\n                    </Row>\n                </Container>\n            </main>\n        </span>\n    )\n}\n\nexport default PokemonApp;","import * as Actions from '../actionTypes'\n\nexport function addPokemon(pokemon) {\n    return {\n        type: Actions.POKEMON_ADDED,\n        payload: pokemon\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PokemonApp from './components/PokemonApp';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport pokemonStore from './stores'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={pokemonStore}>\n    <PokemonApp />\n  </Provider>,\n  rootElement\n)\n"],"sourceRoot":""}